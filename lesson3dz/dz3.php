<?php
/*
 * 1. С помощью цикла while выведите все числа в промежутке от 0 до 100, которые
делятся на 3 без остатка.
 * */

$i = 0;
while (100 >= $i) {
    echo $i;
    ?><br><?php
    $i += 3;
}

?><br><br><?php

/*
 * 2. С помощью цикла do…while напишите функцию для вывода чисел от 0 до 10,
чтобы результат выглядел так:
0 – это ноль
1 – нечетное число
2 – четное число
3 – нечетное число
…
10 – четное число
 * */

$i = 0;
$zero = ' - это ноль';
$odd = ' - нечетное число';
$even = ' - четное число';

do {
    echo $i;

    if (0 == $i) {
        echo $zero;
    } elseif (0 == $i%2) {
        echo $even;
    } elseif (1 == $i%2) {
        echo $odd;
    } else {
        echo '?';
    }

    $i++;
    ?><br><?php

} while (10 >= $i);

?><br><br><?php

/*
 * 3. Задание со звездочкой. Выведите с помощью цикла for числа от 0 до 9, НЕ
используя тело цикла. То есть выглядеть должно вот так:
for(…){// здесь пусто}
 * */

for ($i = 0; 10 > $i; print $i++) {

}

?><br><br><?php

/* как вариант - инкремент во второй части */
for ($i = -1; 9 > $i++; print $i) {

}

?><br><br><?php

/*
 * 4. Объявите массив, где в качестве ключей будут использоваться названия областей, а
в качестве значений – массивы с названиями городов из соответствующей области.
Выведите в цикле значения массива, чтобы результат был таким:
Московская область:
Москва, Зеленоград, Клин
Ленинградская область:
Санкт-Петербург, Всеволожск, Павловск, Кронштадт
Рязанская область
…
(названия городов можно найти на maps.yandex.ru)
 * */

$cities = [
    'Московская область' => ['Москва', 'Зеленоград', 'Клин'],
    'Ленинградская область' => ['Санкт-Петербург', 'Всеволожск', 'Павловск', 'Кроншадт'],
    'Псковская область' => ['Псков', 'Остров', 'Великие Луки', 'Карамышево'],
    'Новгородская область' => ['Великий Новгород', 'Старая Русса', 'Малая вишера'],
];

foreach ($cities as $region => $regCities) {

    echo $region;
    ?>:<br><?php

    echo implode (', ', $regCities);
    ?><br><?php
}

?><br><br><?php

/*
 * 5. Задание со звездочкой. Повторите предыдущее задание, но выводите на экран
только города, начинающиеся с буквы «К».
 * */

echo stripos('Кот', 'к');

foreach ($cities as $region => $regCities) {

    $regCitiesK = [];

    foreach ($regCities as $city) {

        if(0 === stripos($city, 'К')) {
            $regCitiesK[] = $city;
        }
    }

    if (!empty($regCitiesK)) {
        echo $region;
        ?>:<br><?php

        echo implode(', ', $regCitiesK);
        ?><br><?php
    }
}

/*
 * ucwords — Преобразует в верхний регистр первый символ каждого слова в строке
 *string ucwords ( string $str )
Возвращает строку str, в которой первый символ каждого слова переведен в верхний регистр,
если этот символ является буквой.

Эта функция считает словами последовательности символов, разделенных пробельными символами,
которыми являются пробел, разрыв страницы,
перевод строки, возврат каретки, горизонтальная и вертикальная табуляция.
 * */

?><br><br><?php

/*
* 6. Объявите массив, индексами которого являются буквы русского языка, а
значениями – соответствующие латинские буквосочетания (‘а’=> ’a’, ‘б’ => ‘b’, ‘в’
=> ‘v’, ‘г’ => ‘g’, …, ‘э’ => ‘e’, ‘ю’ => ‘yu’, ‘я’ => ‘ya’).
Напишите функцию транслитерации строк.
* */

$arrayTranslit = [
    'а'=>'a',
    'б'=>'b',
    'в'=>'v',
    'г'=>'g',
    'д'=>'d',
    'е'=>'e',
    'ё'=>'yo',
    'ж'=>'zh',
    'з'=>'z',
    'и'=>'i',
    'й'=>'y',
    'к'=>'k',
    'л'=>'l',
    'м'=>'m',
    'н'=>'n',
    'о'=>'o',
    'п'=>'p',
    'р'=>'r',
    'с'=>'s',
    'т'=>'t',
    'у'=>'u',
    'ф'=>'f',
    'х'=>'kh',
    'ц'=>'ts',
    'ч'=>'ch',
    'ш'=>'sh',
    'щ'=>'sth',
    'ъ'=>'h',
    'ы'=>'yi',
    'ь'=>'\'',
    'э'=>'e',
    'ю'=>'yu',
    'я'=>'ya',

    'А'=>'A',
    'Б'=>'B',
    'В'=>'V',
    'Г'=>'G',
    'Д'=>'D',
    'Е'=>'E',
    'Ё'=>'Yo',
    'Ж'=>'Zh',
    'З'=>'Z',
    'И'=>'I',
    'Й'=>'Y',
    'К'=>'K',
    'Л'=>'L',
    'М'=>'M',
    'Н'=>'N',
    'О'=>'O',
    'П'=>'P',
    'Р'=>'R',
    'С'=>'S',
    'Т'=>'T',
    'У'=>'U',
    'Ф'=>'F',
    'Х'=>'Kh',
    'Ц'=>'Ts',
    'Ч'=>'Ch',
    'Ш'=>'Sh',
    'Щ'=>'Sth',
    'Ъ'=>'H',
    'Ы'=>'Yi',
    'Ь'=>'\'',
    'Э'=>'E',
    'Ю'=>'Yu',
    'Я'=>'Ya',

];

/*
 * string strtr ( string $str , string $from , string $to )
 * string strtr ( string $str , array $replace_pairs )
 *
 * Параметр replace_pairs может быть использован вместо to и from,
 * в этом случае он является массивом (array) и имеет форму array('from' => 'to', ...).
 * */

function translitRusLat($string)
{
    $arrayTranslit = [
        'а'=>'a',
        'б'=>'b',
        'в'=>'v',
        'г'=>'g',
        'д'=>'d',
        'е'=>'e',
        'ё'=>'yo',
        'ж'=>'zh',
        'з'=>'z',
        'и'=>'i',
        'й'=>'y',
        'к'=>'k',
        'л'=>'l',
        'м'=>'m',
        'н'=>'n',
        'о'=>'o',
        'п'=>'p',
        'р'=>'r',
        'с'=>'s',
        'т'=>'t',
        'у'=>'u',
        'ф'=>'f',
        'х'=>'kh',
        'ц'=>'ts',
        'ч'=>'ch',
        'ш'=>'sh',
        'щ'=>'sth',
        'ъ'=>'h',
        'ы'=>'yi',
        'ь'=>'\'',
        'э'=>'e',
        'ю'=>'yu',
        'я'=>'ya',

        'А'=>'A',
        'Б'=>'B',
        'В'=>'V',
        'Г'=>'G',
        'Д'=>'D',
        'Е'=>'E',
        'Ё'=>'Yo',
        'Ж'=>'Zh',
        'З'=>'Z',
        'И'=>'I',
        'Й'=>'Y',
        'К'=>'K',
        'Л'=>'L',
        'М'=>'M',
        'Н'=>'N',
        'О'=>'O',
        'П'=>'P',
        'Р'=>'R',
        'С'=>'S',
        'Т'=>'T',
        'У'=>'U',
        'Ф'=>'F',
        'Х'=>'Kh',
        'Ц'=>'Ts',
        'Ч'=>'Ch',
        'Ш'=>'Sh',
        'Щ'=>'Sth',
        'Ъ'=>'H',
        'Ы'=>'Yi',
        'Ь'=>'\'',
        'Э'=>'E',
        'Ю'=>'Yu',
        'Я'=>'Ya',

    ];

    return strtr($string, $arrayTranslit);

}

$str1 = 'Жил был у бабушки серенький козлик';
$str2 = 'Официальный язык, на первый взгляд, выбирает действующий вулкан Катмаи. Венгры страстно любят танцевать, особенно ценятся национальные танцы, при этом оазисное земледелие совершает санитарный и ветеринарный контроль, несмотря на это, обратный обмен болгарской валюты при выезде ограничен. В ресторане стоимость обслуживания (15%) включена в счет; в баре и кафе - 10-15% счета только за услуги официанта; в такси - чаевые включены в стоимость проезда, тем не менее кустарничек точно входит традиционный Гвианский щит. Высотная поясность дегустирует действующий вулкан Катмаи. В турецких банях не принято купаться раздетыми, поэтому из полотенца сооружают юбочку, а каучуконосная гевея наблюдаема.';


echo translitRusLat($str1);
?><br><?php
echo translitRusLat($str2);

?><br><br><?php

/*
 * 7. Напишите функцию, которая заменяет в строке пробелы на подчеркивания и
возвращает видоизмененную строчку.
 * */

/*
 *
mixed str_replace ( mixed $search , mixed $replace , mixed $subject [, int &$count ] )
Эта функция возвращает строку или массив, в котором все вхождения search в subject заменены на replace.

count
Если передан, то будет установлен в количество произведенных замен.
 * */

function spaceToUnderline($string) {
    return str_replace(' ', '_', $string);
}

echo spaceToUnderline($str1);
?><br><?php
echo spaceToUnderline($str2);

?><br><br><?php

/*
 * 8. Объедините две ранее написанные функции в одну, которая получает строку на
русском языке, производит транслитерацию и замену пробелов на подчеркивания
(аналогичная задача решается при конструировании url-адресов на основе названия
статьи в блогах).
 * */

function rusToLatSpaceToUnderline($str) {
    return spaceToUnderline(translitRusLat($str));
}

echo rusToLatSpaceToUnderline($str1);
?><br><?php
echo rusToLatSpaceToUnderline($str2);

/*
 * str_split — Преобразует строку в массив

array str_split ( string $string [, int $split_length = 1 ] )
Преобразует строку в массив.

Список параметров ¶

string
Входная строка.

split_length
Максимальная длина фрагмента.

Возвращаемые значения ¶

Если указан необязательный аргумент split_length, возвращаемый массив будет содержать части исходной
 строки длиной split_length каждая, иначе каждый элемент будет содержать один символ.
 * */

    /*
     * substr - байтовая функция, на Utf8 не работает;
     *
     * -----
     *
     * $simv = $string[$i]; // и-тый символ строки
     * к строке можно обращаться как к массиву байтовых символов
     * */